---
name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v3
        id: setup-python
        with:
          python-version: 3.12
          cache: 'poetry'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root

      - name: Format
        run: |
          source .venv/bin/activate
          black . --check

      - name: Type Check
        run: |
          source .venv/bin/activate
          mypy .

      - name: Lint
        run: |
          source .venv/bin/activate
          pylint $(git ls-files -- '*.py' ':!:**/migrations/*.py')

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade tox tox-gh-actions

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root
          source .venv/bin/activate

      - name: Test
        run: |
          source .venv/bin/activate
          pytest --ignore .poetry --cov
